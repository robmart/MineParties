buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
        classpath "com.wynprice.cursemaven:CurseMaven:2.1.1"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

apply plugin: "com.matthewprenger.cursegradle"
apply plugin: "com.wynprice.cursemaven"

ext.configFile = file('gradle.properties')
ext.privFile = file('private.properties')

ext.config = parseConfig(configFile)
ext.priv = parseConfig(privFile)

version = "${config.mc_version}-${config.mod_version}.${config.build_number}"
group="${config.author}.mods.${config.mod_name}".toLowerCase()
archivesBaseName = config.mod_name
author = config.author

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'snapshot', version: '20200514-1.15.1'

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                mineparties {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                mineparties {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'mineparties', '--all', '--output', file('src/generated/resources/')

            mods {
                mineparties {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.31'

    compile "curse.maven:re-targetingapi:3002230"
    compile "curse.maven:re-targetingapi-src:3002231"
}

jar {
    manifest {
        attributes([
                "Specification-Title": "${config.mod_name}",
                "Specification-Vendor": "${config.author}",
                "Specification-Version": "${config.mod_version}",
                "Implementation-Title": project.name,
                "Implementation-Version": "${config.mod_version}",
                "Implementation-Vendor": "${config.author}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

/**
 * Increments the buildnumber in your config file, and saves it
 */
task incrementBuildNumber {
    doLast {
        config.build_number = (config.build_number.toString().toInteger()) + 1
        configFile.withWriter {
            config.toProperties().store(it, "")
        }
    }
}

task srcJar(type: Jar) {
    from(sourceSets.main.java)
    classifier = 'sources'
    archiveName = "${baseName}-${version}-sources.jar"
}

task deobfJar(type: Jar, dependsOn: 'jar') {
    from "build/source/main"
    classifier "dev"
}
artifacts {
    archives srcJar, deobfJar
}


curseforge {
    if (priv == null) return
    apiKey = priv.curseforge_api_key

    project {
        id = '359952'
        changelog = 'Changes'
        releaseType = 'alpha'

        mainArtifact jar
        addArtifact srcJar
    }
    options {
        debug = false
    }
}

def parseConfig(File config) {
    if(config.exists()){
        config.withReader {
            def prop = new Properties()
            prop.load(it)
            return (new ConfigSlurper().parse(prop))
        }
    } else {
        return null
    }
}

defaultTasks 'clean', 'build', 'incrementBuildNumber', 'curseforge'